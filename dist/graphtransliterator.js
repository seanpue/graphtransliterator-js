var graphtransliterator =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/GraphTransliterator.js":
/*!************************************!*\
  !*** ./lib/GraphTransliterator.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint-disable camelcase, max-depth, max-params */\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = __webpack_require__(/*! ./graphs */ \"./lib/graphs.js\"),\n    DirectedGraph = _require.DirectedGraph;\n\nvar _require2 = __webpack_require__(/*! ./compress */ \"./lib/compress.js\"),\n    decompressSettings = _require2.decompressSettings;\n\nvar _require3 = __webpack_require__(/*! ./errors */ \"./lib/errors.js\"),\n    NoMatchingTransliterationRuleError = _require3.NoMatchingTransliterationRuleError,\n    UnrecognizableInputTokenError = _require3.UnrecognizableInputTokenError;\n/* Graph-based transliteration tool. */\n\n\nvar GraphTransliterator = /*#__PURE__*/function () {\n  /**\n   * Create a GraphTransliterator.\n   * @constructor\n   * @param {Object} settings\n   */\n  function GraphTransliterator(settings) {\n    _classCallCheck(this, GraphTransliterator);\n\n    /* Add version check here, when necessary. */\n    var version = settings.graphtransliterator_version;\n    var compressedSettings = settings.compressed_settings;\n\n    if (compressedSettings) {\n      settings = decompressSettings(compressedSettings);\n      settings.graphtransliterator_version = version;\n    }\n\n    this.tokens = settings.tokens;\n    this.rules = settings.rules;\n    this.tokensByClass = settings.tokens_by_class || tokensByClassOf(this.tokens);\n    this.tokenizerPattern = settings.tokenizer_pattern || tokenizerPatternFrom(this.tokens);\n    this.whitespace = settings.whitespace;\n    this.onmatchRules = settings.onmatch_rules;\n    this.onmatchRulesLookup = settings.onmatch_rules_lookup || onmatchRulesLookupOf(this.tokens, this.onmatchRules);\n    this.metadata = settings.metadata || {};\n    this.graph = settings.graph || graphFrom(this.rules);\n    this.ignoreErrors = settings.ignore_errors;\n    /* Somewhat implemented */\n    // this.checkAmbiguity = settings.check_ambiguity; /* Not implemented */\n\n    this.version = settings.version;\n    this.coverage = settings.coverage;\n    this.tokenizer = RegExp(this.tokenizerPattern, \"g\"); // Use global */\n\n    this.lastRuleKeys = []; // Last matched rules\n\n    this.lastInputDetails = []; // Details of last rules\n\n    this.lastInputTokens = [];\n    this.lastRuleKeys = []; // Matched rule keys are saved here\n\n    this.lastHasErrors = false; // True or false\n  }\n  /**\n   * Get the last rules matched.\n   * @return {Array}\n   */\n\n\n  _createClass(GraphTransliterator, [{\n    key: \"isWhitespace\",\n\n    /**\n     * Check if a token is whitespace.\n     * @return {boolean}\n     */\n    value: function isWhitespace(token) {\n      return this.tokens[token].includes(this.whitespace.token_class);\n    }\n    /**\n     * Create a GraphTransliterator from settings.\n     * (From Python implementation, can be removed.)\n     * @param {object} dictSettings - Compressed on decompressed settings.\n     * @returns {GraphTransliterator}\n     */\n\n  }, {\n    key: \"tokenize\",\n\n    /**\n     * Tokenize input string.\n     * @param {string} input - Input string\n     * @return {Array} - match details\n     */\n    value: function tokenize(input) {\n      var tokenizer = this.tokenizer;\n      tokenizer.lastIndex = 0;\n      var matchDetails = [{\n        token: this.whitespace[\"default\"]\n      }];\n      var prevWhitespace = true;\n\n      while (tokenizer.lastIndex < input.length) {\n        // Save last index incase there is no match\n        var lastIndex = tokenizer.lastIndex;\n        var match = tokenizer.exec(input); // If no match at end of input string,\n        // add unmatched\n\n        if (match === null) {\n          matchDetails.push({\n            matched: false,\n            startIndex: lastIndex,\n            endIndex: input.length,\n            string: input.substring(lastIndex, input.length),\n            token: this.whitespace[\"default\"] // For pattern matching, treat as whitespace\n\n          });\n          tokenizer.lastIndex = input.length;\n        } else {\n          // If token matched but not at last index,\n          // add intermediary unmatched\n          if (match.index > lastIndex) {\n            matchDetails.push({\n              matched: false,\n              startIndex: lastIndex,\n              endIndex: match.index,\n              string: input.substring(lastIndex, match.index),\n              token: this.whitespace[\"default\"]\n            }); // Move last index to start of matched token\n          } // Set token to matched\n\n\n          var token = match[0]; // If whitespace is consolidated, replace token with default token\n          // and append it to the string of the previous whitespace token details.\n          // If it's at the start, add it to the otherwise blank initial whitespace\n          // as its string.\n\n          if (this.whitespace.consolidate) {\n            if (this.isWhitespace(token)) {\n              token = this.whitespace[\"default\"];\n\n              if (prevWhitespace) {\n                // Add initial whitespace to initial whitespace token details string,\n                // which otherwise will not be defined.\n                var prevString = matchDetails[matchDetails.length - 1].string;\n                matchDetails[matchDetails.length - 1].string = prevString ? prevString + match[0] : match[0];\n                continue;\n              } else {\n                prevWhitespace = true;\n              }\n            } else {\n              prevWhitespace = false;\n            }\n          } // Add matched token or default whitespace, if consolidate\n\n\n          matchDetails.push({\n            matched: true,\n            startIndex: match.index,\n            endIndex: tokenizer.lastIndex,\n            string: match[0],\n            token: token\n          });\n        }\n      }\n      /* Pop final whitespace (if matched) and add to string of final whitespace */\n\n\n      if (this.whitespace.consolidate && matchDetails.length > 1 && matchDetails[matchDetails.length - 1].matched === true && this.isWhitespace(matchDetails[matchDetails.length - 1].token)) {\n        var x = matchDetails.pop();\n        matchDetails.push({\n          token: this.whitespace[\"default\"],\n          string: x.string\n        });\n      } else {\n        // Add final whitespace\n        matchDetails.push({\n          token: this.whitespace[\"default\"]\n        });\n      }\n\n      return matchDetails;\n    }\n    /**\n     * Check if constraints on target edge from current node\n     * are met at tokenIdx of tokens.\n     * @param {object} targetEdge\n     * @param {object} currNode\n     * @param {number} tokenIdx\n     * @param {number} tokens\n     * @private\n     */\n\n  }, {\n    key: \"matchConstraints\",\n    value: function matchConstraints(targetEdge, currNode, tokenIdx, tokens) {\n      var constraints = targetEdge.constraints;\n\n      if (constraints === undefined) {\n        return true;\n      }\n\n      for (var _i = 0, _Object$entries = Object.entries(constraints); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            cType = _Object$entries$_i[0],\n            constraintValues = _Object$entries$_i[1];\n\n        if (cType === \"prev_tokens\") {\n          var numTokens = this.rules[currNode.rule_key].tokens.length; // Presume for rule (a) a, with input \"aa\"\n          // ' ', a, a, ' '  start (token_i=3)\n          //             ^\n          //         ^       -1 subtract num_tokens\n          //      ^          - len(c_value)\n\n          var startAt = tokenIdx;\n          startAt -= numTokens;\n          startAt -= constraintValues.length;\n\n          if (!this.matchTokens(startAt, constraintValues, tokens, true, false, false)) {\n            return false;\n          }\n        } else if (cType === \"next_tokens\") {\n          // Presume for rule a (a), with input \"aa\"\n          // ' ', a, a, ' '  start (token_i=2)\n          //         ^\n          var _startAt = tokenIdx;\n\n          if (!this.matchTokens(_startAt, constraintValues, tokens, false, true, false)) {\n            return false;\n          }\n        } else if (cType === \"prev_classes\") {\n          var _numTokens = this.rules[currNode.rule_key].tokens.length; // Presume for rule (a <class_a>) a, with input \"aaa\"\n          // ' ', a, a, a, ' '\n          //                ^     start (token_i=4)\n          //            ^         -num_tokens\n          //         ^            -len(prev_tokens)\n          //  ^                   -len(prev_classes)\n\n          var _startAt2 = tokenIdx;\n          _startAt2 -= _numTokens;\n          var prevTokens = constraints.prev_tokens;\n\n          if (prevTokens) {\n            _startAt2 -= prevTokens.length;\n          }\n\n          _startAt2 -= constraintValues.length;\n\n          if (!this.matchTokens(_startAt2, constraintValues, tokens, true, false, true)) {\n            return false;\n          }\n        } else if (cType === \"next_classes\") {\n          // Presume for rule a (a <class_a>), with input \"aaa\"\n          // ' ', a, a, a, ' '\n          //         ^          start (token_i=2)\n          //            ^       + len of next_tokens (a)\n          var _startAt3 = tokenIdx;\n          var nextTokens = constraints.next_tokens;\n\n          if (nextTokens) {\n            _startAt3 += nextTokens.length;\n          }\n\n          if (!this.matchTokens(_startAt3, constraintValues, tokens, false, true, true)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Check if tokens match according to constraint values at a particular index,\n     * optionally checking previous and next tokens and by token class, with\n     * boundary checks.\n     *\n     * @param {number} startIdx\n     * @param {Array} constraintValues\n     * @param {Array} tokens\n     * @param {boolean} checkPrev\n     * @param {boolean} checkNext\n     * @param {boolean} byClass\n     * @private\n     */\n\n  }, {\n    key: \"matchTokens\",\n    value: function matchTokens(startIdx, constraintValues, tokens, checkPrev, checkNext, byClass) {\n      if (checkPrev && startIdx < 0) {\n        return false;\n      }\n\n      if (checkNext && startIdx + constraintValues.length > tokens.length) {\n        return false;\n      }\n\n      for (var i = 0; i < constraintValues.length; i++) {\n        if (byClass) {\n          var tokenClasses = this.tokens[tokens[startIdx + i]];\n\n          if (!(tokenClasses && tokenClasses.indexOf(constraintValues[i]) >= 0)) {\n            return false;\n          }\n        } else if (tokens[startIdx + i] !== constraintValues[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Match best (least costly) transliteration rule at a given index in the input \n     * tokens and return the index to  that rule. Optionally, return all rules that match.\n      * @param {number} tokenIdx - Location in `tokens` at which to begin\n     * @param {Array} tokens List of strings of tokens\n     * @param matchAll {boolean} \n     *     If true, return the index of all rules matching at the given index. The default is false.\n     * @return (undefined|number|Array) - Index of rule matched or list of rules matched\n     */\n\n  }, {\n    key: \"matchAt\",\n    value: function matchAt(tokenIdx, tokens) {\n      var matchAll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var graph = this.graph;\n      var node = graph.node;\n      var edge = graph.edge;\n      var matches = [];\n      var stack = [];\n\n      function appendChildren(nodeKey, tokenIdx) {\n        // eslint-disable-line\n        var children = [];\n        var orderedChildren = node[nodeKey].ordered_children;\n\n        if (orderedChildren) {\n          children = orderedChildren[tokens[tokenIdx]];\n\n          if (children) {\n            // Reordered high to low for stack\n            children.slice().reverse().forEach(function (childKey) {\n              stack.unshift([childKey, nodeKey, tokenIdx]);\n            });\n          } else {\n            var rulesKeys = orderedChildren.__rules__;\n\n            if (rulesKeys) {\n              rulesKeys.slice().reverse().forEach(function (ruleKey) {\n                stack.unshift([ruleKey, nodeKey, tokenIdx]);\n              });\n            }\n          }\n        }\n      }\n\n      appendChildren(0, tokenIdx); // Append all children of root node\n\n      while (stack.length > 0) {\n        var _stack$shift = stack.shift(),\n            _stack$shift2 = _slicedToArray(_stack$shift, 3),\n            nodeKey = _stack$shift2[0],\n            parentKey = _stack$shift2[1],\n            _tokenIdx = _stack$shift2[2];\n\n        var currNode = node[nodeKey];\n        var incidentEdge = edge[parentKey][nodeKey];\n\n        if (currNode.accepting && this.matchConstraints(incidentEdge, currNode, _tokenIdx, tokens)) {\n          if (matchAll) {\n            matches.push(currNode.rule_key);\n            continue;\n          } else {\n            return currNode.rule_key;\n          }\n        } else {\n          if (_tokenIdx < tokens.length - 1) {\n            _tokenIdx += 1;\n          }\n\n          appendChildren(nodeKey, _tokenIdx);\n        }\n      }\n\n      if (matchAll) {\n        return matches;\n      }\n    }\n    /**\n     * Match all tokens at a particular index.\n     * @param {number} tokenIdx\n     * @param {Array} tokens\n     * @return {undefined|Array} List of rule indexes\n     */\n\n  }, {\n    key: \"matchAllAt\",\n    value: function matchAllAt(tokenIdx, tokens) {\n      return this.matchAt(tokenIdx, tokens, true);\n    }\n    /**\n     * Transliterate an input string into an output string.\n     *\n     * Whitespace will be temporarily appended to start and end of input string.\n     * @param {string} input\n     * @return {string} Transliterated input string.\n     * @throws {UnrecognizableInputTokenError}\n     */\n\n  }, {\n    key: \"transliterate\",\n    value: function transliterate(input) {\n      var tokenDetails = this.tokenize(input);\n      var hasErrors = Boolean(tokenDetails.find(function (el) {\n        return el.matched === false;\n      }));\n\n      if (hasErrors) {\n        var errors = tokenDetails.filter(function (el) {\n          return el.matched === false;\n        });\n        var errorMsg = \"Unrecognized tokens: \" + errors.map(function (el) {\n          return '\"' + el.string + '\" at pos ' + el.startIndex;\n        }).join(\", \") + ' of \"' + input + '\"';\n\n        if (this.ignoreErrors) {\n          console.log(errorMsg);\n        } else {\n          throw new UnrecognizableInputTokenError(errorMsg);\n        }\n      }\n\n      var tokens = tokenDetails.map(function (el) {\n        return el.token;\n      });\n      this.lastInputDetails = tokenDetails;\n      this.lastInputTokens = tokens;\n      this.lastRuleKeys = []; // Matched rule keys are saved here\n\n      this.lastHasErrors = hasErrors; // True or false\n      // Adjust for initial whitespace\n\n      var tokenIdx = 1;\n      var output = \"\";\n\n      while (tokenIdx < tokens.length - 1) {\n        var ruleKey = this.matchAt(tokenIdx, tokens);\n\n        if (ruleKey === undefined) {\n          var _errorMsg = \"No matching transliteration rule at pos \" + tokenDetails[tokenIdx].startIndex + ' of \"' + input + '\"';\n\n          if (this.ignoreErrors) {\n            console.log(_errorMsg);\n            /* Could also log error here */\n\n            tokenIdx += 1;\n            continue;\n          } else {\n            throw new NoMatchingTransliterationRuleError(_errorMsg);\n          }\n        }\n\n        this.lastRuleKeys.push(ruleKey);\n        var rule = this.rules[ruleKey];\n        var tokensMatched = rule.tokens;\n\n        if (this.onmatchRules) {\n          var currMatchRules = void 0;\n          var prevT = tokens[tokenIdx - 1];\n          var currT = tokens[tokenIdx];\n          var currTRules = this.onmatchRulesLookup[currT];\n\n          if (currTRules) {\n            currMatchRules = currTRules[prevT];\n          }\n\n          if (currMatchRules) {\n            for (var i = 0; i < currMatchRules.length; i++) {\n              var onmatchIdx = currMatchRules[i];\n              var onmatch = this.onmatchRules[onmatchIdx]; // <class_a> <class_a> + <class_b>\n              // a a b\n              //     ^\n              // ^      - len(onmatch.prev_rules)\n\n              if (this.matchTokens(tokenIdx - onmatch.prev_classes.length, onmatch.prev_classes, // Checks last value\n              tokens, true, false, true) && this.matchTokens(tokenIdx, onmatch.next_classes, // Checks first value\n              tokens, false, true, true)) {\n                output += onmatch.production;\n                break; // Only match best onmatch rule\n              }\n            }\n          }\n        }\n\n        output += rule.production;\n        tokenIdx += tokensMatched.length;\n      }\n\n      return output;\n    }\n  }, {\n    key: \"lastMatchedRules\",\n    get: function get() {\n      var _this = this;\n\n      return this.lastRuleKeys.map(function (el) {\n        return _this.rules[el];\n      });\n    }\n    /**\n     * Get the last tokens matched.\n     * @return {Array}\n     */\n\n  }, {\n    key: \"lastMatchedRuleTokens\",\n    get: function get() {\n      var _this2 = this;\n\n      return this.lastRuleKeys.map(function (el) {\n        return _this2.rules[el].tokens;\n      });\n    }\n  }], [{\n    key: \"fromDict\",\n    value: function fromDict(dictSettings) {\n      var settings = dictSettings;\n      return new GraphTransliterator(settings);\n    }\n  }]);\n\n  return GraphTransliterator;\n}();\n/**\n * Generate a graph from rules.\n * @param {Array} rules\n * @return {DirectedGraph}\n * @private\n */\n\n\nfunction graphFrom(rules) {\n  var graph = new DirectedGraph();\n  graph.addNode({\n    type: \"Start\"\n  });\n  var parentKey = 0;\n  rules.forEach(function (rule, ruleKey) {\n    parentKey = 0;\n    rule.tokens.forEach(function (token) {\n      var parentNode = graph.node[parentKey];\n      var tokenChildren = parentNode.token_children || {};\n      var tokenNodeKey = tokenChildren[token];\n\n      if (!(tokenNodeKey >= 0)) {\n        tokenNodeKey = graph.addNode({\n          type: \"token\",\n          token: token\n        })[0];\n        graph.addEdge(parentKey, tokenNodeKey, {\n          token: token\n        });\n        tokenChildren[token] = tokenNodeKey;\n        parentNode.token_children = tokenChildren;\n      }\n\n      var currEdge = graph.edge[parentKey][tokenNodeKey];\n      var currCost = currEdge.cost || 1;\n\n      if (currCost > rule.cost) {\n        currEdge.cost = rule.cost;\n      }\n\n      parentKey = tokenNodeKey;\n    });\n    var ruleNodeKey = graph.addNode({\n      type: \"rule\",\n      rule_key: ruleKey,\n      accepting: true\n    })[0];\n    var parentNode = graph.node[parentKey];\n    var ruleChildren = parentNode.rule_children || [];\n    ruleChildren.push(ruleNodeKey);\n    parentNode.rule_children = ruleChildren.sort(function (a, b) {\n      return rules[graph.node[a].rule_key].cost - rules[graph.node[b].rule_key].cost;\n    });\n    var edgeToRule = graph.addEdge(parentKey, ruleNodeKey, {\n      cost: rule.cost\n    });\n    var hasConstraints = rule.prev_classes || rule.prev_tokens || rule.next_tokens || rule.next_classes;\n\n    if (hasConstraints) {\n      var constraints = {};\n      if (rule.prev_classes) constraints.prev_classes = rule.prev_classes;\n      if (rule.prev_tokens) constraints.prev_tokens = rule.prev_tokens;\n      if (rule.next_tokens) constraints.next_tokens = rule.next_tokens;\n      if (rule.next_classes) constraints.next_classes = rule.next_classes;\n      edgeToRule.constraints = constraints;\n    }\n  });\n  graph.node.forEach(function (node, nodeKey) {\n    var orderedChildren = {};\n    var ruleChildrenKeys = node.rule_children; // Add rule childgren to ordered_children dict under '__rules__''\n\n    if (ruleChildrenKeys !== undefined) {\n      orderedChildren.__rules__ = ruleChildrenKeys.sort(function (a, b) {\n        return rules[graph.node[a].rule_key].cost - rules[graph.node[b].rule_key].cost;\n      });\n      delete node.rule_children;\n    }\n\n    var tokenChildren = node.token_children; // Add token children to orderedChildren by token\n\n    if (tokenChildren) {\n      for (var _i2 = 0, _Object$entries2 = Object.entries(tokenChildren); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            token = _Object$entries2$_i[0],\n            tokenKey = _Object$entries2$_i[1];\n\n        orderedChildren[token] = [tokenKey]; // Add rule children there as well\n\n        if (ruleChildrenKeys !== undefined) {\n          var _orderedChildren$toke;\n\n          (_orderedChildren$toke = orderedChildren[token]).push.apply(_orderedChildren$toke, _toConsumableArray(ruleChildrenKeys));\n        } // Sort both by cost\n\n\n        orderedChildren[token].sort(function (a, b) {\n          return graph.edge[nodeKey][a].cost - graph.edge[nodeKey][b].cost;\n        });\n      }\n\n      delete node.token_children;\n    }\n\n    node.ordered_children = orderedChildren;\n  });\n  return graph;\n}\n\nfunction tokensByClassOf(tokens) {\n  var output = {};\n\n  var _loop = function _loop() {\n    var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n        token = _Object$entries3$_i[0],\n        tokenClasses = _Object$entries3$_i[1];\n\n    tokenClasses.forEach(function (tokenClass) {\n      if (!(tokenClass in output)) output[tokenClass] = new Set();\n      output[tokenClass].add(token);\n    });\n  };\n\n  for (var _i3 = 0, _Object$entries3 = Object.entries(tokens); _i3 < _Object$entries3.length; _i3++) {\n    _loop();\n  }\n\n  return output;\n}\n/*\n    \"\"\" Creates a dict lookup from current to previous token.\n\n    Returns\n    -------\n    dict of {str: dict of {str: list of int}}\n        Dictionary keyed by current token to previous token containing a list of\n        :class:`OnMatchRule` in order that would apply\n    \"\"\"\n*/\n\n\nfunction onmatchRulesLookupOf(tokens, onmatchRules) {\n  if (onmatchRules === undefined) {\n    return undefined;\n  }\n\n  var onmatchLookup = {};\n  onmatchRules.forEach(function (rule, ruleKey) {\n    for (var _i4 = 0, _Object$entries4 = Object.entries(tokens); _i4 < _Object$entries4.length; _i4++) {\n      var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n          tokenKey = _Object$entries4$_i[0],\n          tokenClasses = _Object$entries4$_i[1];\n\n      // If the onmatch rule's next is of that class\n      if (tokenClasses.indexOf(rule.next_classes[0]) >= 0) {\n        // Iterate through all tokens again\n        for (var _i5 = 0, _Object$entries5 = Object.entries(tokens); _i5 < _Object$entries5.length; _i5++) {\n          var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i5], 2),\n              prevTokenKey = _Object$entries5$_i[0],\n              prevTokenClasses = _Object$entries5$_i[1];\n\n          // If second token is of class of onmatch rule's last prev\n          // add the rule to curr -> prev\n          if (prevTokenClasses.indexOf(rule.prev_classes[rule.prev_classes.length - 1]) >= 0) {\n            if (!(tokenKey in onmatchLookup)) {\n              onmatchLookup[tokenKey] = {};\n            }\n\n            var currToken = onmatchLookup[tokenKey];\n\n            if (!(prevTokenKey in currToken)) {\n              currToken[prevTokenKey] = [];\n            }\n\n            var ruleList = currToken[prevTokenKey];\n            ruleList.push(ruleKey);\n          }\n        }\n      }\n    }\n  });\n  return onmatchLookup;\n}\n\nfunction tokenizerPatternFrom(tokens) {\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  var x = Object.keys(tokens).sort(function (a, b) {\n    return b.length - a.length || a.localeCompare(b);\n  });\n  var escapedTokens = x.map(escapeRegExp);\n  var output = \"(\" + escapedTokens.join(\"|\") + \")\";\n  return output;\n}\n\nmodule.exports = {\n  GraphTransliterator: GraphTransliterator\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/GraphTransliterator.js?");

/***/ }),

/***/ "./lib/compress.js":
/*!*************************!*\
  !*** ./lib/compress.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable camelcase */\n\n/**\n * Decompress settings.\n *\n * @param {object} compressedSettings\n * @private\n */\nfunction decompressSettings(compressedSettings) {\n  function decompressedCost(x) {\n    // \"\"\"x will be negative.\"\"\"\n    return Math.log2(1 + 1 / (1 - x));\n  }\n\n  function decompressNode(_node) {\n    function decompressedOrderedChildren(index) {\n      var x = _node[index];\n      var out = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(x); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            k = _Object$entries$_i[0],\n            v = _Object$entries$_i[1];\n\n        k = parseInt(k, 10);\n\n        if (k === -1) {\n          out.__rules__ = v;\n        } else {\n          out[tokenFromId[k]] = v;\n        }\n      }\n\n      return out;\n    }\n\n    var nodeType = nodeTypeFromId[_node[0]];\n    var accepting = _node[1] === 1 || false;\n    var newNode = {};\n\n    if (nodeType === \"Start\") {\n      newNode = {\n        type: nodeType,\n        accepting: accepting,\n        ordered_children: decompressedOrderedChildren(2)\n      };\n    } else if (nodeType === \"rule\") {\n      newNode = {\n        type: nodeType,\n        accepting: accepting,\n        rule_key: _node[2]\n      };\n    } else if (nodeType === \"token\") {\n      newNode = {\n        type: nodeType,\n        accepting: accepting,\n        token: tokenFromId[_node[2]],\n        ordered_children: decompressedOrderedChildren(3)\n      };\n    }\n\n    return stripEmpty(newNode);\n  }\n\n  function stripEmpty(obj) {\n    /* Operates directly on object */\n\n    /* this may no longer be necessary due to new compression? */\n\n    /* Object.keys(obj).forEach(key => {\n      if (obj[key] === null) {\n        delete obj[key];\n      } else if (obj[key] === {}) {\n        delete obj[key];\n      }\n    }); */\n    return obj;\n  }\n\n  function decompressEdgeData(data) {\n    var _data = _slicedToArray(data, 3),\n        _constraints = _data[0],\n        _cost = _data[1],\n        _token = _data[2];\n\n    var out = {};\n\n    function classFromIdsOf(index) {\n      var v = _constraints[index]; // If (v === 0) return undefined;\n\n      return v.map(function (el) {\n        return classFromId[el];\n      });\n    }\n\n    function tokenFromIdsOf(index) {\n      var v = _constraints[index]; //   Z if (v === 0) return undefined;\n\n      return v.map(function (el) {\n        return tokenFromId[el];\n      });\n    }\n\n    if (_constraints) {\n      // Filter out unused values\n      out.constraints = stripEmpty({\n        prev_classes: classFromIdsOf(0),\n        prev_tokens: classFromIdsOf(1),\n        next_tokens: tokenFromIdsOf(2),\n        next_classes: classFromIdsOf(3)\n      });\n    }\n\n    out.cost = decompressedCost(_cost);\n    if (_token !== -1) //  -1 indicates no token\n      out.token = tokenFromId[_token];\n    return out;\n  }\n\n  var _compressedSettings = _slicedToArray(compressedSettings, 8),\n      classList = _compressedSettings[0],\n      tokenList = _compressedSettings[1],\n      _tokens = _compressedSettings[2],\n      // _ indicates compression\n  _rules = _compressedSettings[3],\n      _whitespace = _compressedSettings[4],\n      _onmatchRules = _compressedSettings[5],\n      metadata = _compressedSettings[6],\n      _graph = _compressedSettings[7]; // _tokenList = _token_list; /* Previous cast to list */\n\n\n  var tokenFromId = tokenList; // {i: _ for i, _ in enumerate(_token_list)};\n\n  var classFromId = classList; // {i: _ for i, _ in enumerate(classList)}\n\n  var tokens = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(_tokens).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return _defineProperty({}, tokenFromId[k], v.map(function (el) {\n      return classFromId[el];\n    }));\n  }))));\n\n  var rules = _rules.map(function (r) {\n    return {\n      production: r[0],\n      prev_classes: r[1] ? r[1].map(function (el) {\n        return classFromId[el];\n      }) : [],\n      prev_tokens: r[2] ? r[2].map(function (el) {\n        return tokenFromId[el];\n      }) : [],\n      tokens: r[3].map(function (el) {\n        return tokenFromId[el];\n      }),\n      next_tokens: r[4] ? r[4].map(function (el) {\n        return tokenFromId[el];\n      }) : [],\n      next_classes: r[5] ? r[5].map(function (el) {\n        return classFromId[el];\n      }) : [],\n      cost: decompressedCost(r[6])\n    };\n  });\n\n  var whitespace = {\n    \"default\": _whitespace[0],\n    token_class: _whitespace[1],\n    consolidate: _whitespace[2]\n  };\n  var onmatchRules = _onmatchRules ? _onmatchRules.map(function (r) {\n    return {\n      prev_classes: r[0].map(function (el) {\n        return classFromId[el];\n      }),\n      next_classes: r[1].map(function (el) {\n        return classFromId[el];\n      }),\n      production: r[2]\n    };\n  }) : undefined;\n  var graph;\n  var nodeTypeFromId;\n\n  if (_graph) {\n    var _graph2 = _slicedToArray(_graph, 3),\n        _nodetypeList = _graph2[0],\n        _nodes = _graph2[1],\n        _edges = _graph2[2];\n\n    nodeTypeFromId = _nodetypeList; // {i: _ for i, _ in enumerate(_nodetype_list)}\n\n    var node = _nodes.map(function (el) {\n      return decompressNode(el);\n    });\n\n    var edge = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(_edges).map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          k = _ref5[0],\n          v = _ref5[1];\n\n      return _defineProperty({}, k, Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(v).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            tail = _ref7[0],\n            _edgeData = _ref7[1];\n\n        return _defineProperty({}, tail, decompressEdgeData(_edgeData));\n      })))));\n    }))));\n    graph = {\n      node: node,\n      edge: edge\n    };\n  }\n\n  return {\n    tokens: tokens,\n    rules: rules,\n    whitespace: whitespace,\n    onmatch_rules: onmatchRules,\n    graph: graph,\n    metadata: metadata\n  };\n}\n\nmodule.exports = {\n  decompressSettings: decompressSettings\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/compress.js?");

/***/ }),

/***/ "./lib/errors.js":
/*!***********************!*\
  !*** ./lib/errors.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/** Base Graph Transliterator error.\n *  @class GraphTransliteratorError\n *  @extends Error\n **/\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar GraphTransliteratorError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphTransliteratorError, _Error);\n\n  var _super = _createSuper(GraphTransliteratorError);\n\n  function GraphTransliteratorError() {\n    _classCallCheck(this, GraphTransliteratorError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return GraphTransliteratorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/** Graph Transliterator no matching transliteration rule error.\n *  @class NoMatchingTransliterationRuleError\n *  @extends GraphTransliteratorError\n */\n\n\nvar NoMatchingTransliterationRuleError = /*#__PURE__*/function (_GraphTransliteratorE) {\n  _inherits(NoMatchingTransliterationRuleError, _GraphTransliteratorE);\n\n  var _super2 = _createSuper(NoMatchingTransliterationRuleError);\n\n  function NoMatchingTransliterationRuleError(args) {\n    var _this;\n\n    _classCallCheck(this, NoMatchingTransliterationRuleError);\n\n    _this = _super2.call(this, args);\n    _this.name = \"NoMatchingTransliterationRuleError\";\n    return _this;\n  }\n\n  return NoMatchingTransliterationRuleError;\n}(GraphTransliteratorError);\n/** Graph Transliterator unrecognizable token error.\n *  @class UnrecognizableInputTokenError\n *  @extends GraphTransliteratorError\n */\n\n\nvar UnrecognizableInputTokenError = /*#__PURE__*/function (_GraphTransliteratorE2) {\n  _inherits(UnrecognizableInputTokenError, _GraphTransliteratorE2);\n\n  var _super3 = _createSuper(UnrecognizableInputTokenError);\n\n  function UnrecognizableInputTokenError(args) {\n    var _this2;\n\n    _classCallCheck(this, UnrecognizableInputTokenError);\n\n    _this2 = _super3.call(this, args);\n    _this2.name = \"UnrecognizableInputTokenError\";\n    return _this2;\n  }\n\n  return UnrecognizableInputTokenError;\n}(GraphTransliteratorError);\n\nmodule.exports = {\n  GraphTransliteratorError: GraphTransliteratorError,\n  NoMatchingTransliterationRuleError: NoMatchingTransliterationRuleError,\n  UnrecognizableInputTokenError: UnrecognizableInputTokenError\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/errors.js?");

/***/ }),

/***/ "./lib/graphs.js":
/*!***********************!*\
  !*** ./lib/graphs.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint guard-for-in: \"off\" */\n\n/* eslint-disable camelcase */\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DirectedGraph = /*#__PURE__*/function () {\n  /**\n   * Graph data structure used in Graph Transliterator.\n   * @constructor\n   * @param {object} edge\n   *   Mapping from head to tail of edge, holding edge data\n   * @param {Array} node\n   *   Array of node attributes\n   * @param {Array} edge_list\n   *   Array of head and tail of each edge\n   *\n   * @class DirectedGraph\n   */\n  function DirectedGraph(node, edge, edgeList) {\n    _classCallCheck(this, DirectedGraph);\n\n    this.node = node ? node : [];\n    this.edge = edge ? edge : {};\n    this.edge_list = edgeList || [];\n\n    if (edge && !edgeList) {\n      for (var headKey in edge) {\n        for (var edgeKey in edge[headKey]) {\n          this.edge_list.push([parseInt(headKey, 10), parseInt(edgeKey, 10)]);\n        }\n      }\n    }\n  }\n  /**\n   *\n   * @param {object} nodeData - Attributes for node\n   * @returns {Array.<number, number>} - Index of new node\n   */\n\n\n  _createClass(DirectedGraph, [{\n    key: \"addNode\",\n    value: function addNode(nodeData) {\n      if (!nodeData) {\n        nodeData = [];\n      }\n\n      var nodeKey = this.node.length;\n      this.node.push(nodeData);\n      return [nodeKey, this.node[nodeKey]];\n    }\n    /**\n     * Add new edge.\n     *\n     * @param {number} head - Index of head of edge\n     * @param {number} tail - Index of tail of edge\n     * @param {Object} edgeData - Attributes of edge\n     * @returns {Object} - Reference to new edge\n     */\n\n  }, {\n    key: \"addEdge\",\n    value: function addEdge(head, tail, edgeData) {\n      if (!edgeData) {\n        edgeData = {};\n      }\n\n      if (!(head in this.edge)) {\n        this.edge[head] = {};\n      }\n\n      this.edge[head][tail] = edgeData;\n      this.edge_list.push([head, tail]);\n      return this.edge[head][tail];\n    }\n  }]);\n\n  return DirectedGraph;\n}();\n\nmodule.exports = {\n  DirectedGraph: DirectedGraph\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/graphs.js?");

/***/ }),

/***/ "./lib/index.js":
/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! ./graphs */ \"./lib/graphs.js\"),\n    DirectedGraph = _require.DirectedGraph;\n\nvar _require2 = __webpack_require__(/*! ./GraphTransliterator */ \"./lib/GraphTransliterator.js\"),\n    GraphTransliterator = _require2.GraphTransliterator;\n\nvar _require3 = __webpack_require__(/*! ./errors.js */ \"./lib/errors.js\"),\n    GraphTransliteratorError = _require3.GraphTransliteratorError,\n    NoMatchingTransliterationRuleError = _require3.NoMatchingTransliterationRuleError,\n    UnrecognizableInputTokenError = _require3.UnrecognizableInputTokenError;\n\nvar transliterators = __webpack_require__(/*! ./transliterators/ */ \"./lib/transliterators/index.js\");\n\nmodule.exports = {\n  DirectedGraph: DirectedGraph,\n  GraphTransliterator: GraphTransliterator,\n  GraphTransliteratorError: GraphTransliteratorError,\n  NoMatchingTransliterationRuleError: NoMatchingTransliterationRuleError,\n  UnrecognizableInputTokenError: UnrecognizableInputTokenError,\n  transliterators: transliterators\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/index.js?");

/***/ }),

/***/ "./lib/transliterators/Example/Example.json":
/*!**************************************************!*\
  !*** ./lib/transliterators/Example/Example.json ***!
  \**************************************************/
/*! exports provided: graphtransliterator_version, compressed_settings, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"graphtransliterator_version\\\":\\\"1.2.0\\\",\\\"compressed_settings\\\":[[\\\"consonant\\\",\\\"vowel\\\",\\\"whitespace\\\"],[\\\" \\\",\\\"a\\\",\\\"b\\\"],[[2],[1],[0]],[[\\\"!B!\\\",[0],[1],[2],[1],[0],-5],[\\\"A\\\",0,0,[1],0,0,-1],[\\\"B\\\",0,0,[2],0,0,-1],[\\\" \\\",0,0,[0],0,0,-1]],[\\\" \\\",\\\"whitespace\\\",0],[[[1],[1],\\\",\\\"]],{\\\"name\\\":\\\"example\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"description\\\":\\\"An Example Bundled Transliterator\\\",\\\"url\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/master/transliterator/sample\\\",\\\"author\\\":\\\"Author McAuthorson\\\",\\\"author_email\\\":\\\"author_mcauthorson@msu.edu\\\",\\\"license\\\":\\\"MIT License\\\",\\\"keywords\\\":[\\\"example\\\"],\\\"project_urls\\\":{\\\"Documentation\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/master/graphtransliterator/transliterators/example\\\",\\\"Source\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/graphtransliterator/transliterators/example\\\",\\\"Tracker\\\":\\\"https://github.com/seanpue/graphtransliterator/issues\\\"}},null]}\");\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/Example/Example.json?");

/***/ }),

/***/ "./lib/transliterators/Example/Example_tests.json":
/*!********************************************************!*\
  !*** ./lib/transliterators/Example/Example_tests.json ***!
  \********************************************************/
/*! exports provided:  , a, aa, babab, b, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\" \\\":\\\" \\\",\\\"a\\\":\\\"A\\\",\\\"aa\\\":\\\"A,A\\\",\\\"babab\\\":\\\"BA!B!AB\\\",\\\"b\\\":\\\"B\\\"}\");\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/Example/Example_tests.json?");

/***/ }),

/***/ "./lib/transliterators/Example/index.js":
/*!**********************************************!*\
  !*** ./lib/transliterators/Example/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _require = __webpack_require__(/*! ../bundled.js */ \"./lib/transliterators/bundled.js\"),\n    Bundled = _require.Bundled;\n/**\n * Example transliterator\n *\n * @class transliterators/Example\n * @extends Bundled\n */\n\n\nvar ExampleSettings = __webpack_require__(/*! ./Example.json */ \"./lib/transliterators/Example/Example.json\");\n\nvar ExampleTests = __webpack_require__(/*! ./Example_tests.json */ \"./lib/transliterators/Example/Example_tests.json\");\n\nvar Example = new Bundled(ExampleSettings, ExampleTests);\nmodule.exports = Example;\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/Example/index.js?");

/***/ }),

/***/ "./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode.json":
/*!**************************************************************************************!*\
  !*** ./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode.json ***!
  \**************************************************************************************/
/*! exports provided: graphtransliterator_version, compressed_settings, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"graphtransliterator_version\\\":\\\"1.2.0\\\",\\\"compressed_settings\\\":[[\\\"consonant\\\",\\\"vowel\\\",\\\"vowel_sign\\\",\\\"wb\\\",\\\"whitespace\\\"],[\\\"\\\\t\\\",\\\" \\\",\\\",\\\",\\\".D\\\",\\\".Dh\\\",\\\".N\\\",\\\".a\\\",\\\".h\\\",\\\".m\\\",\\\".n\\\",\\\"0\\\",\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\",\\\"9\\\",\\\"A\\\",\\\"A.c\\\",\\\"AUM\\\",\\\"Ch\\\",\\\"D\\\",\\\"Dh\\\",\\\"G\\\",\\\"GY\\\",\\\"H\\\",\\\"I\\\",\\\"J\\\",\\\"K\\\",\\\"L\\\",\\\"LLI\\\",\\\"LLi\\\",\\\"L^i\\\",\\\"M\\\",\\\"N\\\",\\\"OM\\\",\\\"R\\\",\\\"RRI\\\",\\\"RRi\\\",\\\"R^i\\\",\\\"Rs.\\\",\\\"Sh\\\",\\\"T\\\",\\\"Th\\\",\\\"U\\\",\\\"Y\\\",\\\"^e\\\",\\\"^n\\\",\\\"^o\\\",\\\"a\\\",\\\"a.c\\\",\\\"a.e\\\",\\\"aa\\\",\\\"ai\\\",\\\"au\\\",\\\"b\\\",\\\"bh\\\",\\\"ch\\\",\\\"chh\\\",\\\"d\\\",\\\"dh\\\",\\\"dny\\\",\\\"e\\\",\\\"ee\\\",\\\"f\\\",\\\"g\\\",\\\"gh\\\",\\\"h\\\",\\\"i\\\",\\\"ii\\\",\\\"j\\\",\\\"jh\\\",\\\"j~n\\\",\\\"k\\\",\\\"kSh\\\",\\\"kh\\\",\\\"l\\\",\\\"ld\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"ph\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"sh\\\",\\\"t\\\",\\\"th\\\",\\\"u\\\",\\\"uu\\\",\\\"v\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"zh\\\",\\\"|\\\",\\\"||\\\",\\\"~N\\\",\\\"~Rs.\\\",\\\"~n\\\",\\\"ṅ\\\"],[[3,4],[3,4],[3],[0],[0],[2],[3],[3],[2],[2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[1],[1],[3],[0],[0],[0],[0],[0],[3],[1],[0],[0],[0],[1],[1],[1],[2],[0],[3],[0],[1],[1],[1],[3],[0],[0],[0],[1],[0],[1],[0],[1],[1],[1],[2],[1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[0],[0],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[0],[0],[0],[3],[3],[0],[3],[0],[0]],[[\\\"ा\\\",[0],0,[20],0,0,-2],[\\\"ॉ\\\",[0],0,[21],0,0,-2],[\\\"ी\\\",[0],0,[29],0,0,-2],[\\\"ॣ\\\",[0],0,[33],0,0,-2],[\\\"ॢ\\\",[0],0,[34],0,0,-2],[\\\"ॢ\\\",[0],0,[35],0,0,-2],[\\\"ॄ\\\",[0],0,[40],0,0,-2],[\\\"ृ\\\",[0],0,[41],0,0,-2],[\\\"ृ\\\",[0],0,[42],0,0,-2],[\\\"ू\\\",[0],0,[47],0,0,-2],[\\\"ॆ\\\",[0],0,[49],0,0,-2],[\\\"ॊ\\\",[0],0,[51],0,0,-2],[\\\"\\\",[0],0,[52],0,0,-2],[\\\"ॅ\\\",[0],0,[53],0,0,-2],[\\\"ा\\\",[0],0,[55],0,0,-2],[\\\"ै\\\",[0],0,[56],0,0,-2],[\\\"ौ\\\",[0],0,[57],0,0,-2],[\\\"े\\\",[0],0,[65],0,0,-2],[\\\"ी\\\",[0],0,[66],0,0,-2],[\\\"ि\\\",[0],0,[71],0,0,-2],[\\\"ी\\\",[0],0,[72],0,0,-2],[\\\"ो\\\",[0],0,[83],0,0,-2],[\\\"ु\\\",[0],0,[92],0,0,-2],[\\\"ू\\\",[0],0,[93],0,0,-2],[\\\"\\\\t\\\",0,0,[0],0,0,-1],[\\\" \\\",0,0,[1],0,0,-1],[\\\",\\\",0,0,[2],0,0,-1],[\\\"ड़\\\",0,0,[3],0,0,-1],[\\\"ढ़\\\",0,0,[4],0,0,-1],[\\\"ँ\\\",0,0,[5],0,0,-1],[\\\"ऽ\\\",0,0,[6],0,0,-1],[\\\"्‌\\\",0,0,[7],0,0,-1],[\\\"ं\\\",0,0,[8],0,0,-1],[\\\"ं\\\",0,0,[9],0,0,-1],[\\\"०\\\",0,0,[10],0,0,-1],[\\\"१\\\",0,0,[11],0,0,-1],[\\\"२\\\",0,0,[12],0,0,-1],[\\\"३\\\",0,0,[13],0,0,-1],[\\\"४\\\",0,0,[14],0,0,-1],[\\\"५\\\",0,0,[15],0,0,-1],[\\\"६\\\",0,0,[16],0,0,-1],[\\\"७\\\",0,0,[17],0,0,-1],[\\\"८\\\",0,0,[18],0,0,-1],[\\\"९\\\",0,0,[19],0,0,-1],[\\\"आ\\\",0,0,[20],0,0,-1],[\\\"ऑ\\\",0,0,[21],0,0,-1],[\\\"ॐ\\\",0,0,[22],0,0,-1],[\\\"छ\\\",0,0,[23],0,0,-1],[\\\"ड\\\",0,0,[24],0,0,-1],[\\\"ढ\\\",0,0,[25],0,0,-1],[\\\"ग़\\\",0,0,[26],0,0,-1],[\\\"ज्ञ\\\",0,0,[27],0,0,-1],[\\\"ः\\\",0,0,[28],0,0,-1],[\\\"ई\\\",0,0,[29],0,0,-1],[\\\"ज़\\\",0,0,[30],0,0,-1],[\\\"ख़\\\",0,0,[31],0,0,-1],[\\\"ळ\\\",0,0,[32],0,0,-1],[\\\"ॡ\\\",0,0,[33],0,0,-1],[\\\"ऌ\\\",0,0,[34],0,0,-1],[\\\"ऌ\\\",0,0,[35],0,0,-1],[\\\"ं\\\",0,0,[36],0,0,-1],[\\\"ण\\\",0,0,[37],0,0,-1],[\\\"ॐ\\\",0,0,[38],0,0,-1],[\\\"ऱ\\\",0,0,[39],0,0,-1],[\\\"ॠ\\\",0,0,[40],0,0,-1],[\\\"ऋ\\\",0,0,[41],0,0,-1],[\\\"ऋ\\\",0,0,[42],0,0,-1],[\\\"₹\\\",0,0,[43],0,0,-1],[\\\"ष\\\",0,0,[44],0,0,-1],[\\\"ट\\\",0,0,[45],0,0,-1],[\\\"ठ\\\",0,0,[46],0,0,-1],[\\\"ऊ\\\",0,0,[47],0,0,-1],[\\\"य़\\\",0,0,[48],0,0,-1],[\\\"ऎ\\\",0,0,[49],0,0,-1],[\\\"ऩ\\\",0,0,[50],0,0,-1],[\\\"ऒ\\\",0,0,[51],0,0,-1],[\\\"अ\\\",0,0,[52],0,0,-1],[\\\"ऍ\\\",0,0,[53],0,0,-1],[\\\"ॲ\\\",0,0,[54],0,0,-1],[\\\"आ\\\",0,0,[55],0,0,-1],[\\\"ऐ\\\",0,0,[56],0,0,-1],[\\\"औ\\\",0,0,[57],0,0,-1],[\\\"ब\\\",0,0,[58],0,0,-1],[\\\"भ\\\",0,0,[59],0,0,-1],[\\\"च\\\",0,0,[60],0,0,-1],[\\\"छ\\\",0,0,[61],0,0,-1],[\\\"द\\\",0,0,[62],0,0,-1],[\\\"ध\\\",0,0,[63],0,0,-1],[\\\"ज्ञ\\\",0,0,[64],0,0,-1],[\\\"ए\\\",0,0,[65],0,0,-1],[\\\"ई\\\",0,0,[66],0,0,-1],[\\\"फ़\\\",0,0,[67],0,0,-1],[\\\"ग\\\",0,0,[68],0,0,-1],[\\\"घ\\\",0,0,[69],0,0,-1],[\\\"ह\\\",0,0,[70],0,0,-1],[\\\"इ\\\",0,0,[71],0,0,-1],[\\\"ई\\\",0,0,[72],0,0,-1],[\\\"ज\\\",0,0,[73],0,0,-1],[\\\"झ\\\",0,0,[74],0,0,-1],[\\\"ज्ञ\\\",0,0,[75],0,0,-1],[\\\"क\\\",0,0,[76],0,0,-1],[\\\"क्ष\\\",0,0,[77],0,0,-1],[\\\"ख\\\",0,0,[78],0,0,-1],[\\\"ल\\\",0,0,[79],0,0,-1],[\\\"ळ\\\",0,0,[80],0,0,-1],[\\\"म\\\",0,0,[81],0,0,-1],[\\\"न\\\",0,0,[82],0,0,-1],[\\\"ओ\\\",0,0,[83],0,0,-1],[\\\"प\\\",0,0,[84],0,0,-1],[\\\"फ\\\",0,0,[85],0,0,-1],[\\\"क़\\\",0,0,[86],0,0,-1],[\\\"र\\\",0,0,[87],0,0,-1],[\\\"स\\\",0,0,[88],0,0,-1],[\\\"श\\\",0,0,[89],0,0,-1],[\\\"त\\\",0,0,[90],0,0,-1],[\\\"थ\\\",0,0,[91],0,0,-1],[\\\"उ\\\",0,0,[92],0,0,-1],[\\\"ऊ\\\",0,0,[93],0,0,-1],[\\\"व\\\",0,0,[94],0,0,-1],[\\\"क्ष\\\",0,0,[95],0,0,-1],[\\\"य\\\",0,0,[96],0,0,-1],[\\\"ज़\\\",0,0,[97],0,0,-1],[\\\"ऴ\\\",0,0,[98],0,0,-1],[\\\"।\\\",0,0,[99],0,0,-1],[\\\"॥\\\",0,0,[100],0,0,-1],[\\\"ङ\\\",0,0,[101],0,0,-1],[\\\"₹\\\",0,0,[102],0,0,-1],[\\\"ञ\\\",0,0,[103],0,0,-1],[\\\"ङ\\\",0,0,[104],0,0,-1]],[\\\" \\\",\\\"whitespace\\\",0],[[[0],[0],\\\"्\\\"]],{\\\"name\\\":\\\"ITRANSDevanagariToUnicode\\\",\\\"description\\\":\\\"ITRANS Devanagari to Unicode Transliterator\\\",\\\"version\\\":\\\"0.1.0\\\",\\\"url\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/graphtransliterator/transliterators/itrans_devanagari_to_unicode\\\",\\\"author\\\":\\\"A. Sean Pue\\\",\\\"author_email\\\":\\\"pue@msu.edu\\\",\\\"license\\\":\\\"MIT\\\",\\\"keywords\\\":[\\\"devanagari\\\",\\\"ITRANS\\\",\\\"Hindi\\\",\\\"Sanskrit\\\"],\\\"project_urls\\\":{\\\"Documentation\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/master/graphtransliterator/transliterators/itrans_devanagari_to_unicode\\\",\\\"Source\\\":\\\"https://github.com/seanpue/graphtransliterator/tree/graphtransliterator/transliterators/itrans_devanagari_to_unicode\\\",\\\"Tracker\\\":\\\"https://github.com/seanpue/graphtransliterator/issues\\\"}},null]}\");\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode.json?");

/***/ }),

/***/ "./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode_tests.json":
/*!********************************************************************************************!*\
  !*** ./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode_tests.json ***!
  \********************************************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 	,  , ,, .D, .Dh, .N, .a, .h, .m, .n, A, A.c, AUM, Ch, D, Dh, G, GY, H, I, J, K, L, LLI, LLi, L^i, M, N, OM, R, RRI, RRi, R^i, Rs., Sh, T, Th, U, Y, ^e, ^n, ^o, a, a.c, a.e, aa, ai, au, b, bh, ch, chh, d, dh, dny, dnyA, dnyA.c, dnyI, dnyLLI, dnyLLi, dnyL^i, dnyRRI, dnyRRi, dnyR^i, dnyU, dny^e, dny^o, dnya, dnya.c, dnyaa, dnyai, dnyau, dnydny, dnye, dnyee, dnyi, dnyii, dnyo, dnyu, dnyuu, e, ee, f, g, gh, h, i, ii, j, jh, j~n, k, kSh, kh, l, ld, m, n, o, p, ph, q, r, s, sh, t, th, u, uu, v, x, y, z, zh, |, ||, ~N, ~Rs., ~n, ṅ, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"0\\\":\\\"०\\\",\\\"1\\\":\\\"१\\\",\\\"2\\\":\\\"२\\\",\\\"3\\\":\\\"३\\\",\\\"4\\\":\\\"४\\\",\\\"5\\\":\\\"५\\\",\\\"6\\\":\\\"६\\\",\\\"7\\\":\\\"७\\\",\\\"8\\\":\\\"८\\\",\\\"9\\\":\\\"९\\\",\\\"\\\\t\\\":\\\"\\\\t\\\",\\\" \\\":\\\" \\\",\\\",\\\":\\\",\\\",\\\".D\\\":\\\"ड़\\\",\\\".Dh\\\":\\\"ढ़\\\",\\\".N\\\":\\\"ँ\\\",\\\".a\\\":\\\"ऽ\\\",\\\".h\\\":\\\"्‌\\\",\\\".m\\\":\\\"ं\\\",\\\".n\\\":\\\"ं\\\",\\\"A\\\":\\\"आ\\\",\\\"A.c\\\":\\\"ऑ\\\",\\\"AUM\\\":\\\"ॐ\\\",\\\"Ch\\\":\\\"छ\\\",\\\"D\\\":\\\"ड\\\",\\\"Dh\\\":\\\"ढ\\\",\\\"G\\\":\\\"ग़\\\",\\\"GY\\\":\\\"ज्ञ\\\",\\\"H\\\":\\\"ः\\\",\\\"I\\\":\\\"ई\\\",\\\"J\\\":\\\"ज़\\\",\\\"K\\\":\\\"ख़\\\",\\\"L\\\":\\\"ळ\\\",\\\"LLI\\\":\\\"ॡ\\\",\\\"LLi\\\":\\\"ऌ\\\",\\\"L^i\\\":\\\"ऌ\\\",\\\"M\\\":\\\"ं\\\",\\\"N\\\":\\\"ण\\\",\\\"OM\\\":\\\"ॐ\\\",\\\"R\\\":\\\"ऱ\\\",\\\"RRI\\\":\\\"ॠ\\\",\\\"RRi\\\":\\\"ऋ\\\",\\\"R^i\\\":\\\"ऋ\\\",\\\"Rs.\\\":\\\"₹\\\",\\\"Sh\\\":\\\"ष\\\",\\\"T\\\":\\\"ट\\\",\\\"Th\\\":\\\"ठ\\\",\\\"U\\\":\\\"ऊ\\\",\\\"Y\\\":\\\"य़\\\",\\\"^e\\\":\\\"ऎ\\\",\\\"^n\\\":\\\"ऩ\\\",\\\"^o\\\":\\\"ऒ\\\",\\\"a\\\":\\\"अ\\\",\\\"a.c\\\":\\\"ऍ\\\",\\\"a.e\\\":\\\"ॲ\\\",\\\"aa\\\":\\\"आ\\\",\\\"ai\\\":\\\"ऐ\\\",\\\"au\\\":\\\"औ\\\",\\\"b\\\":\\\"ब\\\",\\\"bh\\\":\\\"भ\\\",\\\"ch\\\":\\\"च\\\",\\\"chh\\\":\\\"छ\\\",\\\"d\\\":\\\"द\\\",\\\"dh\\\":\\\"ध\\\",\\\"dny\\\":\\\"ज्ञ\\\",\\\"dnyA\\\":\\\"ज्ञा\\\",\\\"dnyA.c\\\":\\\"ज्ञॉ\\\",\\\"dnyI\\\":\\\"ज्ञी\\\",\\\"dnyLLI\\\":\\\"ज्ञॣ\\\",\\\"dnyLLi\\\":\\\"ज्ञॢ\\\",\\\"dnyL^i\\\":\\\"ज्ञॢ\\\",\\\"dnyRRI\\\":\\\"ज्ञॄ\\\",\\\"dnyRRi\\\":\\\"ज्ञृ\\\",\\\"dnyR^i\\\":\\\"ज्ञृ\\\",\\\"dnyU\\\":\\\"ज्ञू\\\",\\\"dny^e\\\":\\\"ज्ञॆ\\\",\\\"dny^o\\\":\\\"ज्ञॊ\\\",\\\"dnya\\\":\\\"ज्ञ\\\",\\\"dnya.c\\\":\\\"ज्ञॅ\\\",\\\"dnyaa\\\":\\\"ज्ञा\\\",\\\"dnyai\\\":\\\"ज्ञै\\\",\\\"dnyau\\\":\\\"ज्ञौ\\\",\\\"dnydny\\\":\\\"ज्ञ्ज्ञ\\\",\\\"dnye\\\":\\\"ज्ञे\\\",\\\"dnyee\\\":\\\"ज्ञी\\\",\\\"dnyi\\\":\\\"ज्ञि\\\",\\\"dnyii\\\":\\\"ज्ञी\\\",\\\"dnyo\\\":\\\"ज्ञो\\\",\\\"dnyu\\\":\\\"ज्ञु\\\",\\\"dnyuu\\\":\\\"ज्ञू\\\",\\\"e\\\":\\\"ए\\\",\\\"ee\\\":\\\"ई\\\",\\\"f\\\":\\\"फ़\\\",\\\"g\\\":\\\"ग\\\",\\\"gh\\\":\\\"घ\\\",\\\"h\\\":\\\"ह\\\",\\\"i\\\":\\\"इ\\\",\\\"ii\\\":\\\"ई\\\",\\\"j\\\":\\\"ज\\\",\\\"jh\\\":\\\"झ\\\",\\\"j~n\\\":\\\"ज्ञ\\\",\\\"k\\\":\\\"क\\\",\\\"kSh\\\":\\\"क्ष\\\",\\\"kh\\\":\\\"ख\\\",\\\"l\\\":\\\"ल\\\",\\\"ld\\\":\\\"ळ\\\",\\\"m\\\":\\\"म\\\",\\\"n\\\":\\\"न\\\",\\\"o\\\":\\\"ओ\\\",\\\"p\\\":\\\"प\\\",\\\"ph\\\":\\\"फ\\\",\\\"q\\\":\\\"क़\\\",\\\"r\\\":\\\"र\\\",\\\"s\\\":\\\"स\\\",\\\"sh\\\":\\\"श\\\",\\\"t\\\":\\\"त\\\",\\\"th\\\":\\\"थ\\\",\\\"u\\\":\\\"उ\\\",\\\"uu\\\":\\\"ऊ\\\",\\\"v\\\":\\\"व\\\",\\\"x\\\":\\\"क्ष\\\",\\\"y\\\":\\\"य\\\",\\\"z\\\":\\\"ज़\\\",\\\"zh\\\":\\\"ऴ\\\",\\\"|\\\":\\\"।\\\",\\\"||\\\":\\\"॥\\\",\\\"~N\\\":\\\"ङ\\\",\\\"~Rs.\\\":\\\"₹\\\",\\\"~n\\\":\\\"ञ\\\",\\\"ṅ\\\":\\\"ङ\\\"}\");\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode_tests.json?");

/***/ }),

/***/ "./lib/transliterators/ITRANSDevanagariToUnicode/index.js":
/*!****************************************************************!*\
  !*** ./lib/transliterators/ITRANSDevanagariToUnicode/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _require = __webpack_require__(/*! ../bundled.js */ \"./lib/transliterators/bundled.js\"),\n    Bundled = _require.Bundled;\n/**\n * ITRANSDevanagariToUnicode transliterator\n *\n * @class transliterators/ITRANSDevanagariToUnicode\n * @extends Bundled\n */\n\n\nvar ITRANSDevanagariToUnicodeSettings = __webpack_require__(/*! ./ITRANSDevanagariToUnicode.json */ \"./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode.json\");\n\nvar ITRANSDevanagariToUnicodeTests = __webpack_require__(/*! ./ITRANSDevanagariToUnicode_tests.json */ \"./lib/transliterators/ITRANSDevanagariToUnicode/ITRANSDevanagariToUnicode_tests.json\");\n\nvar ITRANSDevanagariToUnicode = new Bundled(ITRANSDevanagariToUnicodeSettings, ITRANSDevanagariToUnicodeTests);\nmodule.exports = ITRANSDevanagariToUnicode;\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/ITRANSDevanagariToUnicode/index.js?");

/***/ }),

/***/ "./lib/transliterators/bundled.js":
/*!****************************************!*\
  !*** ./lib/transliterators/bundled.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _require = __webpack_require__(/*! ../GraphTransliterator */ \"./lib/GraphTransliterator.js\"),\n    GraphTransliterator = _require.GraphTransliterator;\n/**\n * Bundled Transliterator\n *\n * Includes field testsFileName\n *\n * @class BundledTransliterator\n * @extends GraphTransliterator\n */\n// const ${className}Settings = require(\"./${className}.json\");\n// const ${className}Tests = require(\"./${className}_tests.json\");\n\n\nvar Bundled = /*#__PURE__*/function (_GraphTransliterator) {\n  _inherits(Bundled, _GraphTransliterator);\n\n  var _super = _createSuper(Bundled);\n\n  function Bundled(settings, tests) {\n    var _this;\n\n    _classCallCheck(this, Bundled);\n\n    _this = _super.call(this, settings);\n    _this.settings = settings;\n    _this.tests = tests;\n    return _this;\n  }\n\n  return Bundled;\n}(GraphTransliterator);\n\nmodule.exports = {\n  Bundled: Bundled\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/bundled.js?");

/***/ }),

/***/ "./lib/transliterators/index.js":
/*!**************************************!*\
  !*** ./lib/transliterators/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Graph Transliterator's bundled transliterators\n *\n * @module transliterators\n *\n */\nvar _require = __webpack_require__(/*! ./bundled.js */ \"./lib/transliterators/bundled.js\"),\n    Bundled = _require.Bundled;\n\nmodule.exports = {\n  Bundled: Bundled,\n  Example: __webpack_require__(/*! ./Example */ \"./lib/transliterators/Example/index.js\"),\n  ITRANSDevanagariToUnicode: __webpack_require__(/*! ./ITRANSDevanagariToUnicode */ \"./lib/transliterators/ITRANSDevanagariToUnicode/index.js\")\n};\n\n//# sourceURL=webpack://graphtransliterator/./lib/transliterators/index.js?");

/***/ })

/******/ });