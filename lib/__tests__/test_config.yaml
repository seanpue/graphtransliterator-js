tokens:
  a: [class_a]
  b: [class_b]
  c: [class_c]
  " ": [wb]
  d: []
  Aa: [contrained_rule]
rules:
  a: A
  b: B
  <class_c> <class_c> a: A(AFTER_CLASS_C_AND_CLASS_C)
  (<class_c> b) a: A(AFTER_B_AND_CLASS_C)
  (<class_c> b b) a a: AA(AFTER_BB_AND_CLASS_C)
  a <class_c>: A(BEFORE_CLASS_C)
  a b (c <class_b>): AB(BEFORE_C_AND_CLASS_B)
  c: C
  c c: C*2
  a (b b b): A(BEFORE_B_B_B)
  d (c <class_a>): D(BEFORE_C_AND_CLASS_A)
  (b b) a: A(AFTER_B_B)
  <wb> Aa: A(ONLY_A_CONSTRAINED_RULE)
  d d: "<DD>"
  d: "<D>"
  " ": " "
onmatch_rules:
  -
      <class_a> <class_b> + <class_a> <class_b>: "!"
  -
      <class_a> + <class_b>: ","
whitespace:
  default: ' '
  consolidate: True
  token_class: wb
  